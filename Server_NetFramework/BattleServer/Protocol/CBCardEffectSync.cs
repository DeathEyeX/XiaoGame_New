// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CBCardEffectSync.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Message {

  /// <summary>Holder for reflection information generated from CBCardEffectSync.proto</summary>
  public static partial class CBCardEffectSyncReflection {

    #region Descriptor
    /// <summary>File descriptor for CBCardEffectSync.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CBCardEffectSyncReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZDQkNhcmRFZmZlY3RTeW5jLnByb3RvEgdtZXNzYWdlImQKEENCQ2FyZEVm",
            "ZmVjdFN5bmMSFAoMZnJvbVBsYXllcklEGAEgASgFEhIKCmZyb21DYXJkSUQY",
            "AiABKAUSEAoIdGFyZ2V0SUQYAyABKAUSFAoMdGFyZ2V0Q2FyZElEGAQgASgF",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.CBCardEffectSync), global::Message.CBCardEffectSync.Parser, new[]{ "FromPlayerID", "FromCardID", "TargetID", "TargetCardID" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CBCardEffectSync : pb::IMessage<CBCardEffectSync> {
    private static readonly pb::MessageParser<CBCardEffectSync> _parser = new pb::MessageParser<CBCardEffectSync>(() => new CBCardEffectSync());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CBCardEffectSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.CBCardEffectSyncReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CBCardEffectSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CBCardEffectSync(CBCardEffectSync other) : this() {
      fromPlayerID_ = other.fromPlayerID_;
      fromCardID_ = other.fromCardID_;
      targetID_ = other.targetID_;
      targetCardID_ = other.targetCardID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CBCardEffectSync Clone() {
      return new CBCardEffectSync(this);
    }

    /// <summary>Field number for the "fromPlayerID" field.</summary>
    public const int FromPlayerIDFieldNumber = 1;
    private int fromPlayerID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FromPlayerID {
      get { return fromPlayerID_; }
      set {
        fromPlayerID_ = value;
      }
    }

    /// <summary>Field number for the "fromCardID" field.</summary>
    public const int FromCardIDFieldNumber = 2;
    private int fromCardID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FromCardID {
      get { return fromCardID_; }
      set {
        fromCardID_ = value;
      }
    }

    /// <summary>Field number for the "targetID" field.</summary>
    public const int TargetIDFieldNumber = 3;
    private int targetID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetID {
      get { return targetID_; }
      set {
        targetID_ = value;
      }
    }

    /// <summary>Field number for the "targetCardID" field.</summary>
    public const int TargetCardIDFieldNumber = 4;
    private int targetCardID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetCardID {
      get { return targetCardID_; }
      set {
        targetCardID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CBCardEffectSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CBCardEffectSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromPlayerID != other.FromPlayerID) return false;
      if (FromCardID != other.FromCardID) return false;
      if (TargetID != other.TargetID) return false;
      if (TargetCardID != other.TargetCardID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromPlayerID != 0) hash ^= FromPlayerID.GetHashCode();
      if (FromCardID != 0) hash ^= FromCardID.GetHashCode();
      if (TargetID != 0) hash ^= TargetID.GetHashCode();
      if (TargetCardID != 0) hash ^= TargetCardID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromPlayerID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FromPlayerID);
      }
      if (FromCardID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FromCardID);
      }
      if (TargetID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TargetID);
      }
      if (TargetCardID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TargetCardID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromPlayerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromPlayerID);
      }
      if (FromCardID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromCardID);
      }
      if (TargetID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetID);
      }
      if (TargetCardID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetCardID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CBCardEffectSync other) {
      if (other == null) {
        return;
      }
      if (other.FromPlayerID != 0) {
        FromPlayerID = other.FromPlayerID;
      }
      if (other.FromCardID != 0) {
        FromCardID = other.FromCardID;
      }
      if (other.TargetID != 0) {
        TargetID = other.TargetID;
      }
      if (other.TargetCardID != 0) {
        TargetCardID = other.TargetCardID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            FromPlayerID = input.ReadInt32();
            break;
          }
          case 16: {
            FromCardID = input.ReadInt32();
            break;
          }
          case 24: {
            TargetID = input.ReadInt32();
            break;
          }
          case 32: {
            TargetCardID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
