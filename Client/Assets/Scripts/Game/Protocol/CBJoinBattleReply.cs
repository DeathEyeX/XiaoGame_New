// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CBJoinBattleReply.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Message {

  /// <summary>Holder for reflection information generated from CBJoinBattleReply.proto</summary>
  public static partial class CBJoinBattleReplyReflection {

    #region Descriptor
    /// <summary>File descriptor for CBJoinBattleReply.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CBJoinBattleReplyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdDQkpvaW5CYXR0bGVSZXBseS5wcm90bxIHbWVzc2FnZRoLSW5mb3MucHJv",
            "dG8iagoRQ0JKb2luQmF0dGxlUmVwbHkSJQoEaW5mbxgBIAEoCzIXLm1lc3Nh",
            "Z2UuQmF0dGxlUm9vbUluZm8SLgoLcGxheWVySW5mb3MYAiADKAsyGS5tZXNz",
            "YWdlLkJhdHRsZVBsYXllckluZm9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Message.InfosReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Message.CBJoinBattleReply), global::Message.CBJoinBattleReply.Parser, new[]{ "Info", "PlayerInfos" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 客户端 -> 主服 登录请求
  /// </summary>
  public sealed partial class CBJoinBattleReply : pb::IMessage<CBJoinBattleReply> {
    private static readonly pb::MessageParser<CBJoinBattleReply> _parser = new pb::MessageParser<CBJoinBattleReply>(() => new CBJoinBattleReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CBJoinBattleReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Message.CBJoinBattleReplyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CBJoinBattleReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CBJoinBattleReply(CBJoinBattleReply other) : this() {
      Info = other.info_ != null ? other.Info.Clone() : null;
      playerInfos_ = other.playerInfos_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CBJoinBattleReply Clone() {
      return new CBJoinBattleReply(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Message.BattleRoomInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Message.BattleRoomInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "playerInfos" field.</summary>
    public const int PlayerInfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Message.BattlePlayerInfo> _repeated_playerInfos_codec
        = pb::FieldCodec.ForMessage(18, global::Message.BattlePlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Message.BattlePlayerInfo> playerInfos_ = new pbc::RepeatedField<global::Message.BattlePlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Message.BattlePlayerInfo> PlayerInfos {
      get { return playerInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CBJoinBattleReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CBJoinBattleReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if(!playerInfos_.Equals(other.playerInfos_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      hash ^= playerInfos_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      playerInfos_.WriteTo(output, _repeated_playerInfos_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      size += playerInfos_.CalculateSize(_repeated_playerInfos_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CBJoinBattleReply other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          info_ = new global::Message.BattleRoomInfo();
        }
        Info.MergeFrom(other.Info);
      }
      playerInfos_.Add(other.playerInfos_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (info_ == null) {
              info_ = new global::Message.BattleRoomInfo();
            }
            input.ReadMessage(info_);
            break;
          }
          case 18: {
            playerInfos_.AddEntriesFrom(input, _repeated_playerInfos_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
